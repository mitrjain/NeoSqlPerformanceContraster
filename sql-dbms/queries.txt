**SELECTION**
Q1: Looking for professionals in a specific tag?
SELECT p.* FROM professionals p JOIN tag_users tu ON p.professionals_id = tu.tag_users_user_id JOIN tags t ON tu.tag_users_tag_id = t.tags_tag_id WHERE tags_tag_name = 'college';

Q2: Looking for students in a specific group and interested in a specific tag?
SELECT * FROM students s JOIN group_memberships gm ON students_id = gm.group_memberships_user_id JOIN groups_ g ON g.groups_id = gm.group_memberships_group_id JOIN tag_users tu ON tu.tag_users_user_id = s.students_id JOIN tags t ON t.tags_tag_id = tu.tag_users_tag_id WHERE t.tags_tag_name = 'college' AND g.groups_group_type = 'youth program';

Q3: Looking for all emails received by a particular professional?
SELECT * FROM professionals p JOIN emails e ON p.professionals_id = e.emails_recipient_id WHERE p.professionals_id = ’0079e89bf1544926b98310e81315b9f1’;

**RECURSION**
Q4: Looking for the questions with answers recursively many times?
WITH RECURSIVE answer_replies AS( SELECT answers_id, answers_author_id, answers_question_id, answers_date_added, answers_body FROM answers WHERE answers_question_id IS not null UNION all SELECT a.answers_id, a.answers_author_id, a.answers_question_id, a.answers_date_added, a.answers_body FROM answers a INNER JOIN answer_replies ar ON ar.answers_id = a.answers_question_id ) SELECT * FROM answer_replies ar LEFT JOIN questions q ON ar.answers_question_id = q.questions_id;

Q5: Looking for questions with answers recursively twice?
WITH RECURSIVE answer_replies AS(SELECT 1 as level,answers_id, answers_author_id, answers_question_id, answers_date_added, answers_body FROM answers WHERE answers_question_id IS not null UNION all SELECT level+1, a.answers_id, a.answers_author_id, a.answers_question_id, a.answers_date_added, a.answers_body FROM answers a INNER JOIN answer_replies ar ON ar.answers_id = a.answers_question_id WHERE level <=2) SELECT * FROM answer_replies ar LEFT JOIN questions q ON ar.answers_question_id = q.questions_id;

Q6: Looking for questions with answers recursively 3 times?
WITH RECURSIVE answer_replies AS( SELECT 1 as level,answers_id, answers_author_id, answers_question_id, answers_date_added, answers_body FROM answers WHERE answers_question_id IS not null UNION all SELECT level+1, a.answers_id, a.answers_author_id, a.answers_question_id, a.answers_date_added, a.answers_body FROM answers a INNER JOIN answer_replies ar ON ar.answers_id = a.answers_question_id WHERE level <=3) SELECT * FROM answer_replies ar LEFT JOIN questions q ON ar.answers_question_id = q.questions_id;

**AGGREGATION**
Q7: Count the number of professionals who answered the questions.
SELECT count(professionals_id) FROM professionals p JOIN answers a ON p.professionals_id = a.answers_author_id;

Q8: Count the number of professionals of a specific tag.
SELECT count(*) FROM (SELECT DISTINCT p.* FROM professionals p JOIN tag_users tu ON p.professionals_id = tu.tag_users_user_id JOIN tags t ON tu.tag_users_tag_id = t.tags_tag_id WHERE t.tags_tag_name = 'college') AS temp;

Q9: Which tag has the most professionals?
SELECT tags.tags_tag_id, tags_tag_name, COUNT(p.professionals_id) AS number_of_professionals FROM tags JOIN tag_users tu ON tags.tags_tag_id = tu.tag_users_tag_id JOIN professionals p ON p.professionals_id = tu.tag_users_user_id GROUP BY tags.tags_tag_id, tags_tag_name ORDER BY COUNT(p.professionals_id) DESC LIMIT 1;

**PATTERN MATCH**
Q10: Looking for the question answered in tags?
SELECT q.questions_id, t.tags_tag_id, a.answers_id FROM tags t JOIN tag_questions tq ON t.tags_tag_id = tq.tag_questions_tag_id JOIN questions q ON tq.tag_questions_question_id = q.questions_id JOIN answers a ON a.answers_question_id = questions_id;

Q11: Looking for students and professionals with the same group?
SELECT g.groups_id, professionals_id, students_id FROM groups_ g JOIN group_memberships gm ON g.groups_id = gm.group_memberships_group_id JOIN (SELECT group_memberships_group_id AS group_id, professionals_id FROM professionals p JOIN group_memberships gm1 ON gm1.group_memberships_user_id = p.professionals_id) pg ON pg.group_id = gm.group_memberships_group_id JOIN (SELECT group_memberships_group_id AS group_id, students_id FROM students s JOIN group_memberships gm2 ON s.students_id = gm2.group_memberships_user_id) sg ON sg.group_id= gm.group_memberships_group_id;

Q12: Looking for patterns that students and experts in the same tag?
SELECT pt.tags_id, st.students_id, pt.professionals_id FROM tags t JOIN tag_users tu ON t.tags_tag_id = tu.tag_users_tag_id JOIN (SELECT u.tag_users_tag_id AS tags_id, professionals_id FROM professionals p JOIN tag_users u ON p.professionals_id = u.tag_users_user_id) pt ON pt.tags_id= t.tags_tag_id JOIN (SELECT u.tag_users_tag_id AS tags_id, students_id FROM students s JOIN tag_users u ON s.students_id = u.tag_users_user_id) st ON st.tags_id = t.tags_tag_id LIMIT 100000;





